apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "org.jmailen.kotlinter"
apply plugin: 'maven-publish'

android {
    compileSdkVersion 34
    namespace "de.governikus.ausweisapp2.sdkwrapper"

    defaultConfig {
        buildToolsVersion "34.0.0"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 4
        versionName sdkwrapper_version
        archivesBaseName = "sdkwrapper"

        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testOptions.unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        allWarningsAsErrors = true
        freeCompilerArgs = ["-opt-in=kotlin.RequiresOptIn", "-Xstring-concat=inline"] // Used for UnitTests, can be removed with kotlin 1.7.0
    }

    lintOptions {
        setLintConfig(file("../lint.xml"))
        checkDependencies false
        warningsAsErrors true
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${archivesBaseName}-${variant.name}-${defaultConfig.versionName}.aar"
        }
    }

    publishing {
        singleVariant("release")
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
    archiveVersion = android.defaultConfig.versionName
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = 'Local'
                url "$project.rootDir/build/dist/libs"
            }
            maven {
                name = 'Nexus'
                credentials {
                    username System.getenv("NEXUS_USERNAME")
                    password System.getenv("NEXUS_PSW")
                }
                url = System.getenv("NEXUS_URL")
            }
        }
        publications {
            snapshot(MavenPublication) {
                from components.release
                groupId = 'de.governikus.ausweisapp2'
                artifactId = 'sdkwrapper'
                version = "${android.defaultConfig.versionName}-SNAPSHOT"

                artifact(sourceJar)
            }
            release(MavenPublication) {
                from components.release
                pom {
                    name = 'AusweisApp2 SDK Wrapper'
                    description = 'Convenient authentication SDK'
                    url = 'https://www.governikus.de'
                }
                groupId = 'de.governikus.ausweisapp2'
                artifactId = 'sdkwrapper'
                version = android.defaultConfig.versionName

                artifact(sourceJar)
            }
        }
    }
}

def useLocal = file("${rootDir}/ausweisapp/ausweisapp2.aar").exists();

dependencies {
    if (useLocal) {
        implementation project(':ausweisapp')
        println "⚠   ⚠   ⚠   ⚠   WARNING  ⚠   ⚠   ⚠   ⚠\n" +
        "   Using local SDK might be outdated  \n" +
        "⚠  Delete local SDK in lib folder to ⚠\n" +
        "   use latest version!                \n" +
        "⚠   ⚠   ⚠   ⚠   WARNING  ⚠   ⚠   ⚠   ⚠"
    }
    else {
        implementation "com.governikus:ausweisapp:$ausweisapp_version"
    }

    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation "junit:junit:4.13.2"
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'

}
